================================================================================
Правила именования
================================================================================

--------------------------------------------------------------------------------
Используйте правильный английский для идентификаторов
--------------------------------------------------------------------------------

Все имена и идентификаторы пишутся на английском (без использования транслитерации и т.д.).

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     fileName
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     imyaFayla
   =============  ==============================================================
--------------------------------------------------------------------------------
Избегайте "бессодержательных" имен
--------------------------------------------------------------------------------

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     void swap(const int lhs, const int rhs)
                     {
                         int newLhsValue(rhs);
                         rhs = lhs;
                         lhs = newLhsValue;
                     }
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     void swap(const int lhs, const int rhs)
                     {
                         int temp(rhs);
                         rhs = lhs;
                         lhs = temp;
                     }

   =============  ==============================================================--------------------------------------------------------------------------------
Используйте множественные формы существительных для обозначения коллекций объектов.
--------------------------------------------------------------------------------

:ПРИМЕР:

   .. code-block:: c++

      int pValues[] = {0};
      vector<Point> points;

--------------------------------------------------------------------------------
Используйте префикс "g\_" для глобальных переменных
--------------------------------------------------------------------------------

.. todo:: ссылка на правила обращения к глобальным переменным

:ПРИМЕР:

   .. code-block:: c++

      int g_nCall(0);

--------------------------------------------------------------------------------
Используйте префикс "i" для переменных, определяющих порядковый номер некоторого объекта.
--------------------------------------------------------------------------------

:ПРИМЕР:

   .. code-block:: c++

      iPoint

--------------------------------------------------------------------------------
Испоьлзуйте стандартные префиксы имен для логических сущностей
--------------------------------------------------------------------------------

Используйте префиксы is, has, can, should для имен переменных и функций, определяющих логические свойства некоторого объекта.

:ПРИМЕР:

   .. code-block:: c++

      isBook
      
   .. code-block:: c++

      canMove()
--------------------------------------------------------------------------------
Используйте префикс "n" для переменных, определяющих число некоторых объектов.
--------------------------------------------------------------------------------

:ПРИМЕР:

   .. code-block:: c++

      nPoint = points.size();

--------------------------------------------------------------------------------
Используйте префикс "p" для переменных-указателей.
--------------------------------------------------------------------------------
:ПРИМЕР:

   .. code-block:: c++

      int* pValues(0);
--------------------------------------------------------------------------------
Используйте префикс "s\_" для неконстантных статичских переменных.
--------------------------------------------------------------------------------

:ПРИМЕР:

   .. code-block:: c++

      static int s_nCall(0);

--------------------------------------------------------------------------------
Используйте стандартный суффикс для обозначения (идентифицурующего) номера 
--------------------------------------------------------------------------------

Используйте суффикс "No" для переменных, определяющих идентификационный номер некоторого объекта.

:ПРИМЕР:

   .. code-block:: c++

      chapterNo

--------------------------------------------------------------------------------
Избегайте отрицаний в идентификаторах
--------------------------------------------------------------------------------

Используйте имена переменных без отрицаний. Наличие отрицания в имени переменной сильно усложняет понимание логических выражений, особенно, если в последних присутствует логическое отрицание.

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     bool isError(false);
                     bool canMove(true);

                  .. code-block:: c++

                     if (!isError)
                     {
                         ...
                     }
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     bool isNotError(true);
                     bool cantMove(false);

                  .. code-block:: c++

                     if (!isNotError)
                     {
                         ...
                     }
   =============  ==============================================================

--------------------------------------------------------------------------------
Сокращения (аббревиатуры) подчиняются общим правилам (пишуться в camelCase)
--------------------------------------------------------------------------------

Если в качестве имен (части имен) используются аббревиатуры и акронимы, то последние должны подчиняться общим правилам (а не писаться полностью в верхнем регистре).

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     exportHtmlSource();

                     openDvdPlayer();
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     exportHTMLSource();

                     openDVDPlayer();
   =============  ==============================================================

--------------------------------------------------------------------------------
Пишите идентификаторы переменных в смешанном регистре начиная с символа нижнего регистра.
--------------------------------------------------------------------------------

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     strMessage
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     strmessage

                     str_message

                     StrMessage
   =============  ==============================================================
--------------------------------------------------------------------------------
Используйте нижний регистр и подчеркивания для пространств имен
--------------------------------------------------------------------------------

Пишите имена пространств имен в нижнем регистре с использованием подчеркивания в качестве разделителя.

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     std
                     model::analyzer
                     common::math_geometry
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     SAMPLE
                     Model::analyzer
                     common::mathGeometry
   =============  ==============================================================

--------------------------------------------------------------------------------
Пишите имена функций в смешанном регистре начиная с символа нижнего регистра. Рекомендуется начинать имя функции с глагола (английского).
--------------------------------------------------------------------------------

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     getName
                     computeTotalWidth
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     GetName
                     widthCompute
   =============  ==============================================================
--------------------------------------------------------------------------------
Используйте верхний регистр и подчеркивания для константных значений
--------------------------------------------------------------------------------
Пишите именованные константы (включая значения перечислений) в верхнем регистре с использованием подчеркивания в качестве разделителя.

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     MAX_ITERATIONS
                     COLOR_RED
                     PI
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     MaxIterations
                     max_iterations
                     MAXITERATIONS
   =============  ==============================================================

--------------------------------------------------------------------------------
Используйте верхний регистр и подчеркивания для макроопределений
--------------------------------------------------------------------------------

Пишите макроопределения в верхнем регистре с использованием подчеркивания в качестве разделителя.

:ПРИМЕР:

   .. code-block:: c++

      #ifndef PAGER_H_20110201
      #define PAGER_H_20110201
      \.\.\.
--------------------------------------------------------------------------------
Используйте одиночные заглавные буквы для идентификаторов типизированных параметров шаблонов
--------------------------------------------------------------------------------

:ПРИМЕР:

   .. code-block:: c++

      template<class T>

      template<typename C, typename D>

--------------------------------------------------------------------------------
Для парных функций используйте парные имена
--------------------------------------------------------------------------------

.. hlist::
   :columns: 2

   * get/set
   * add/remove
   * create/destroy
   * start/stop
   * insert/delete
   * increment/decrement
   * old/new
   * begin/end
   * first/last
   * up/down
   * min/max
   * next/previous
   * old/new
   * open/close
   * show/hide
   * suspend/resume

etc.

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     bool addPage()
                     {
                         ...
                     }
                     
                     bool removePage()
                     {
                         ...
                     }
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     bool addPage()
                     {
                         ...
                     }

                     bool destroyPage()
                     {
                         ...
                     }


   =============  ==============================================================

--------------------------------------------------------------------------------
Избегайте запрещенных идентификаторов
--------------------------------------------------------------------------------

Запрещено начинать имена с подчеркивания (резервируется для реализации компиляторов).

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     fileName_
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     _fileName
   =============  ==============================================================
--------------------------------------------------------------------------------
Избегайте запрещенных идентификаторов
--------------------------------------------------------------------------------

Запрещено начинать имена с подчеркивания (резервируется для реализации компиляторов).

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     fileName_
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     _fileName
   =============  ==============================================================
--------------------------------------------------------------------------------
Выбирайте имена функциям в зависимости от их семантики
--------------------------------------------------------------------------------

Давайте функциям (возвращают некоторое значение) имена в соответствии с тем, что они возвращают. 

Давайте процедурам (ничего не возвращают) имена в соответствии с тем, что они делают.