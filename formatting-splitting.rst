--------------------------------------------------------------------------------
Делайте очевидным и хорошо заметным в коде разрыв строки. Выравнивайте новую строку в соответствии с предыдущей строкой.
--------------------------------------------------------------------------------

Базовое выравнивание продожения соответсвует 2-м базовым отступам блока, т.е. 8 символов.

   .. note::  Часто в такой ситуации лучше не переносить продолжение выражения на следующую строку, а разбить вычисление самого выражения на несколько простых шагов, каждый из которых будет умещаться в одну строку. Такой коди читать и отлаживать будет проще.

--------------------------------------------------------------------------------
Перенос частей длинных логических выражений
--------------------------------------------------------------------------------
При переносе длинных логическиы выражений логические операторы дожны стоять в начале 

.. table::

   =============  ==============================================================
   ПРАВИЛЬНО      .. code-block:: c++

                     return Doc::Status::IS_OPENED == document.status()
                             || line.isValid()
                             || (line.id() == idNext && line.value().str().empty());
   -------------  --------------------------------------------------------------
   НЕПРАВИЛЬНО    .. code-block:: c++

                     return Doc::Status::IS_OPENED == document.status() ||
                             line.isValid() ||
                             (line.id() == idNext && line.value().str().empty());
   =============  ==============================================================

.. tip:: 

--------------------------------------------------------------------------------
Делайте очевидным и хорошо заметным в коде разрыв строки. Выравнивайте новую строку в соответствии с предыдущей строкой.
--------------------------------------------------------------------------------

.. hint::    Разрыв строки длинного выражения:

   .. code-block:: c++

      totalSum = a + b + c +
                 d + e; 


.. hint::

   Разрыв строки параметров при вызове функции:

   .. code-block:: c++

      functionCall(param1, param2,
                   param3);
   или
   
   .. code-block:: c++

      functionCall(param1, param2,
          param3);

.. hint::

   Разрыв длинной текстовой строки строки:
   
   .. code-block:: c++

      setText ("Long line split"
               "into two parts.");

.. hint::

   Разрыв длинной управляющей инструкции:
   
   .. code-block:: c++

      for (int tableNo(0); tableNo < nTables;
           tableNo += tableStep) {
      }
   
.. hint::

   Разрыв длинного списка инициализации:

   .. code-block:: c++

      unsigned char searchTable[] = { 
          0x00, 0x01, 0x01, 0x02, 0x01, 0x1, 0x02, 
          0x01, 0x02, 0x03, 0x01, 0x01, 0x02, 0x1, 
          0x02, 0x03};

