--------------------------------------------------------------------------------
Длинные строки разрывайте и переносите продолжение
--------------------------------------------------------------------------------
Делайте очевидным и хорошо заметным в коде разрыв строки. Выравнивайте новую строку в соответствии с предыдущей строкой.

Базовое выравнивание продожения соответсвует 2-м базовым отступам блока, т.е. 8 символов.

.. note:: Если необходимость переноса вызвана слишком длинным выражением, то часто лучше не переносить части такого выражения на следующие строки, а разбить вычисление самого выражения на несколько простых шагов, каждое из которых будет умещаться в одну строку. Читать и отлаживать такой код будет проще.

При переносе длинных логическиы выражений логические операторы дожны стоять в начале 

.. hint::

   .. code-block:: c++

      return Doc::Status::IS_OPENED == document.status()
              || line.isValid()
              || (line.id() == idNext && line.value().str().empty());

.. error::

   .. code-block:: c++

      return Doc::Status::IS_OPENED == document.status() ||
              line.isValid() ||
              (line.id() == idNext && line.value().str().empty());


.. todo:: Разрыв строки длинного выражения.

.. todo:: Разрыв строки параметров при вызове функции.

.. todo:: Разрыв длинного строкового литерала.

.. todo:: Разрыв длинной управляющей инструкции.

.. todo:: Разрыв длинного списка инициализации.

