================================================================================
Прочее форматирование
================================================================================

--------------------------------------------------------------------------------
Размещайте не более одного оператора присваивания в строке
--------------------------------------------------------------------------------

.. hint::

   .. code-block:: c++

       a = 0;
       b = 0;

.. error::

   .. code-block:: c++

      a = b = 0;

--------------------------------------------------------------------------------
Каждая инструкция в своей строке
--------------------------------------------------------------------------------
Размещайте не более одной инструкции в одной строке (в строке не больше одной ';', кроме случая цикла for)

.. hint::


   .. code-block:: c++

       int i(0);
       findBorder(&i);


.. error::

   .. code-block:: c++

      int i(0); findBorder(&i);

--------------------------------------------------------------------------------
Скобки в сложных выражениях
--------------------------------------------------------------------------------
Полагайтесь на приоритет только арифметических операторов. Используйте скобки для выделения частей выражений и указания приоритета вычислений.

.. hint::

   .. code-block:: c++

      a = b & (c | e) & d;

.. error::

    .. code-block:: c++

       a = b & c | e & d;


--------------------------------------------------------------------------------
Нарушения рекомендация возможны, если обоснованы
--------------------------------------------------------------------------------
Используйте отличные от рекомендуемого форматирование только в том случае, если его использование существенно улучшает читаемость кода.

.. hint::

   .. code-block:: c++

      switch (typePhase)
      {
          case PHASE_PRE    : start(phase, "Pre");    break;
          case PHASE_COMMON : start(phase, "Common"); break;
          case PHASE_POST   : start(phase, "Post");   break;
      }

